@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
<h1>All Users</h1>
<br />
<br />
<style>
    .table th, .table td {
        vertical-align: middle;
    }

    .badge {
        color: #fff; /* Ensure text color is white */
        padding: 0.5em 0.75em; /* Add padding for better visibility */
        border-radius: 0.5rem; /* Rounded edges */
    }

    .btn {
        margin: 0 5px;
    }

    .alert-danger {
        text-align: center;
        margin-top: 20px;
    }

    <style >
    .badge-purple {
        background-color: #6f42c1; /* Purple */
        color: white;
    }

    .badge-orange {
        background-color: #fd7e14; /* Orange */
        color: white;
    }
</style>
</style>


<form asp-action="Index">
    <div class="row m-5">

        <div class="col-8">
            <input name="email" class="form-control" placeholder="Search User By EmailAddress" type="search" />
        </div>

        <div class="col-4">
            <input class="btn btn-success " value="Search" type="submit" />
        </div>

    </div>
</form>


<br />
<br />

@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(U => U.Id)</th>
                <th>@Html.DisplayNameFor(U => U.Username)</th>
                <th>@Html.DisplayNameFor(U => U.FirstName)</th>
                <th>@Html.DisplayNameFor(U => U.LastName)</th>
                <th>@Html.DisplayNameFor(U => U.Email)</th>
                <th>@Html.DisplayNameFor(U => U.Roles)</th>

            </tr>
        </thead>
        <tbody>

            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Id </td>
                    <td>@user.Username </td>
                    <td>@user.FirstName </td>
                    <td>@user.LastName </td>
                    <td>@Html.DisplayFor(M => user.Email) </td>
                    <td>
                        @if (user.Roles != null && user.Roles.Any())
                        {
                            foreach (var role in user.Roles)
                            {
                                <span class="badge @GetBadgeClass(role) m-1">@role</span>
                            }
                        }
                        else
                        {
                            <span class="badge badge-light text-muted">No Roles</span>
                        }
                    </td>
                    <partial name="_ButtonsPartialView" model=user.Id />


                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h1 class="alert-danger">There are No Users to Display :( </h1>
}

@* CSS BADGES *@

@functions {
    private string GetBadgeClass(string role)
    {
        switch (role)
        {
            case "Admin":
                return "badge-danger"; // Red for Admin
            case "User":
                return "badge-primary"; // Blue for User
            case "Manager":
                return "badge-warning"; // Yellow for Manager
            case "Moderator":
                return "badge-info"; // Light blue for Moderator
            case "Guest":
                return "badge-secondary"; // Grey for Guest
            case "Editor":
                return "badge-success"; // Green for Editor
            case "Subscriber":
                return "badge-light"; // Light color for Subscriber
            case "Support":
                return "badge-dark"; // Dark color for Support
            case "SuperAdmin":
                return "badge-purple"; // Purple for SuperAdmin
            case "Developer":
                return "badge-orange"; // Orange for Developer
            default:
                return "badge-purple"; // Default color for other roles
        }
    }
}

